{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SAEhCC,EAAc,EACdC,EAAY,EACVC,EAAcJ,SAASC,cAAc,iBACrCI,EAAYL,SAASC,cAAc,eAEzC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAS,CAAEJ,WAAUC,S,GAEtBA,E,IAGPT,EAAKiB,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAKN,IAJA,IAAMC,EAAQC,SAASrB,EAAKsB,SAAgB,MAAEC,OACxCC,EAAOH,SAASrB,EAAKsB,SAAe,KAAEC,OACtCE,EAASJ,SAASrB,EAAKsB,SAAiB,OAAEC,OAEvCG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAElCnB,EAAcmB,EAAI,EADCN,EAAQM,EAAIF,GAE5BG,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBN,GAAe,EACfE,EAAYwB,YAAc,2BAAuCC,OAAZ3B,GACrD4B,EAAAjC,GAASkC,OAAOC,QAAQ,8CAEaH,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,gB,IAG5CyB,OAAM,SAAAN,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBL,GAAa,EACbE,EAAUuB,YAAc,4BAAsCC,OAAV1B,GACpD2B,EAAAjC,GAASkC,OAAOG,QAAQ,6CAEYL,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,gB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\n\nlet greenCouter = 0;\nlet redCouter = 0;\nconst greenValues = document.querySelector('.green-values');\nconst redValues = document.querySelector('.red-values');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, rejected) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        rejected({ position, delay });\n      }\n    }, delay);\n  });\n}\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const delay = parseInt(form.elements['delay'].value);\n  const step = parseInt(form.elements['step'].value);\n  const number = parseInt(form.elements['amount'].value);\n\n  for (let i = 0; i < number; i += 1) {\n    const finalDelay = delay + i * step;\n    createPromise(i + 1, finalDelay)\n      .then(({ position, delay }) => {\n        greenCouter += 1;\n        greenValues.textContent = `Zielony licznik wynosi: ${greenCouter}`;\n        Notiflix.Notify.success(`\n          ✅\n          Fulfilled promise ${position} in ${delay}ms\n        `);\n      })\n      .catch(({ position, delay }) => {\n        redCouter += 1;\n        redValues.textContent = `Czerwony licznik wynosi: ${redCouter}`;\n        Notiflix.Notify.failure(`\n          ❌\n          Rejected promise ${position} in ${delay}ms\n        `);\n      });\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$greenCouter","$ce04d3a99e08e73b$var$redCouter","$ce04d3a99e08e73b$var$greenValues","$ce04d3a99e08e73b$var$redValues","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","rejected","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","parseInt","elements","value","step","number","i","then","param","textContent","concat","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.413343d8.js.map"}