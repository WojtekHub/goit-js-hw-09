{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAEpC,IAAIC,EAAc,EACdC,EAAY,EAChB,MAAMC,EAAcJ,SAASC,cAAc,iBACrCI,EAAYL,SAASC,cAAc,eAEzC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAS,C,SAAEJ,E,MAAUC,GAAQ,GAE9BA,EAAM,G,CAGbT,EAAKiB,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN,MAAMC,EAAQC,SAASrB,EAAKsB,SAAgB,MAAEC,OACxCC,EAAOH,SAASrB,EAAKsB,SAAe,KAAEC,OACtCE,EAASJ,SAASrB,EAAKsB,SAAiB,OAAEC,OAEhD,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAElCnB,EAAcmB,EAAI,EADCN,EAAQM,EAAIF,GAE5BG,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBN,GAAe,EACfE,EAAYuB,YAAc,2BAA2BzB,IACrD0B,EAAA/B,GAASgC,OAAOC,QAAQ,8CAEFvB,QAAeC,gBACnC,IAEHuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBL,GAAa,EACbE,EAAUsB,YAAc,4BAA4BxB,IACpDyB,EAAA/B,GAASgC,OAAOG,QAAQ,6CAEHzB,QAAeC,gBAClC,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\n\nlet greenCouter = 0;\nlet redCouter = 0;\nconst greenValues = document.querySelector('.green-values');\nconst redValues = document.querySelector('.red-values');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, rejected) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        rejected({ position, delay });\n      }\n    }, delay);\n  });\n}\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const delay = parseInt(form.elements['delay'].value);\n  const step = parseInt(form.elements['step'].value);\n  const number = parseInt(form.elements['amount'].value);\n\n  for (let i = 0; i < number; i += 1) {\n    const finalDelay = delay + i * step;\n    createPromise(i + 1, finalDelay)\n      .then(({ position, delay }) => {\n        greenCouter += 1;\n        greenValues.textContent = `Zielony licznik wynosi: ${greenCouter}`;\n        Notiflix.Notify.success(`\n          ✅\n          Fulfilled promise ${position} in ${delay}ms\n        `);\n      })\n      .catch(({ position, delay }) => {\n        redCouter += 1;\n        redValues.textContent = `Czerwony licznik wynosi: ${redCouter}`;\n        Notiflix.Notify.failure(`\n          ❌\n          Rejected promise ${position} in ${delay}ms\n        `);\n      });\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$greenCouter","$47d4ff9957288465$var$redCouter","$47d4ff9957288465$var$greenValues","$47d4ff9957288465$var$redValues","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","rejected","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","parseInt","elements","value","step","number","i","then","textContent","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.c6e3b993.js.map"}